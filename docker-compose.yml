version: "3"

services:
  api-gateway:
    build: ./gateway
    networks:
      - backend
    environment:
      - NODE_ENV=development
      - PORT=3000
    ports:
      - 8080:3000
    volumes:
      - ./gateway:/usr/src/app
    depends_on:
      - user-service
    command: ["npm", "run", "dev"]

  user-service:
    build: ./user-service
    networks:
      - backend
    volumes:
      - ./user-service:/app
    environment:
      - DATABASE_URL=postgresql://user_service_user:${USER_DB_PASSWORD}@user-db/userdb
    depends_on:
      - user-db

    command: ["./wait-for", "user-db:5432", "--", "./start-script"]

  test-user-service:
    build: ./user-service
    networks:
      - backend
    volumes:
      - ./user-service:/app
    environment:
      - DATABASE_URL=postgresql://test_user_service_user:${USER_DB_PASSWORD}@test-user-db/testuserdb
    depends_on:
      - test-user-db

    command: ["./wait-for", "test-user-db:5432", "--", "./start-script-test"]

  test-user-db:
    image: postgres:alpine
    networks:
      - backend
    volumes:
      - test-user-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=testuserdb
      - POSTGRES_USER=test_user_service_user
      - POSTGRES_PASSWORD=${USER_DB_PASSWORD}

  user-db:
    image: postgres:alpine
    networks:
      - backend
    volumes:
      - user-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=userdb
      - POSTGRES_USER=user_service_user
      - POSTGRES_PASSWORD=${USER_DB_PASSWORD}

volumes:
  user-db-data:
  test-user-db-data:

networks:
  backend:
    driver: bridge
